#include "xil_printf.h"
#include "sleep.h"
#include "math.h"
#define XPAR_AXI_XADC_0_DEVICE_ID0
#define C_BASEADDR 0x43C00000
//int float2int(float x,int precision){
//   int y= (int)x;
//    float z=fabs(x-y);
//  int a=(int)(z*precision);
//  if(a<0){
//	  a=-a;  }
//    xil_printf("%d.%d\n\r",y,a); }
int float2int(float x,int precision){
    int y= (int)x;
    float z= x-y;
    int a=(int)(z*precision);
    if (a<0){
        a=-a;
    }
     xil_printf("testdata=%d.%d",y,a);
  }
int main()
{
	u16 data[3]={};
    float new_x=0;//this is main code for data integration (line1)
    int i=0;
    float Vt;
//    int R1=10000;
//    float T,Tc,Tf;
//    float c1 = 1.009249522e-03, c2 = 2.378405444e-04, c3 = 2.019202697e-07;
  	float Qmax = 2.600*3600; // in Coulomb
  	float SOC1=0,SOC;
    float Q1 = 0;
    float Q,SOC0,OCV0;
    float p1=0.0392, p2=-0.1847, p3=0.9958;    //double p1=-4.831*pow(10,7) , p2=1.427*pow(10,9) ,p3= -1.873*pow(10,10), p4=1.434*pow(10,11),
//  float p1=1.25*pow(10,4),p2=6.62*pow(10,-16),p3=8.326*pow(10,-16);
    float m1= 34.74, m2=-657.6, m3=3105;
    unsigned channel[3]={0x9111,0x9119,0x9116};
    unsigned Sequence[3]={0x002,0x200,0x800};
    unsigned Auxport[3] = {0x244,0x264,0x27C};
    int only1time=0;
	while(1)
			{
        Xil_Out32(C_BASEADDR + 0x300 , channel[i]);   //40
        Xil_Out32(C_BASEADDR + 0x304 , 0x2F0F);   //41
        Xil_Out32(C_BASEADDR + 0x308 , 0x0400);   //42
	    Xil_Out32(C_BASEADDR + 0x320 , Sequence[i]); //48
	    sleep(2);

		data[i]=Xil_In32(C_BASEADDR + Auxport[i]);
//		data[i]=data[i]>>4;
		data[i]=data[i]*0.8056;
//		float d=((float)data[i])*0.0001;
                i=i+1;
                if (i==3)
                  {i=0;
float d=((float)data[1])*0.0001;
float2int(d,10000);
//               Vt=data[1]*23.7;
                  Vt=data[1]*23.7;
//                  new_x += data[1];
                  new_x += data[1];
                  OCV0= p1+(p2*Vt)+(p3*data[1]);
             if(only1time==0){                                         // copy this line to your code
                	  SOC0=((m1*OCV0*OCV0)+(m2*OCV0)+m3);             // copy this line to your code and replace with soc0
                    only1time=1;                                      // copy this line to your code                                                                   // copy this line to your code
                    }
                  Q1=new_x;
                  float Q0=SOC0*Qmax;
                  Q=Q0-Q1;
                  SOC1=(Q/Qmax);
                  SOC=SOC1*100;
//                  float R2 = R1 *(4095.0/ data[0]- 1.0);
//                                                  //data[4]=R2;
//                                                   float sensor = log(R2);
//                                                   T = (1.0 / (c1 + (c2 * sensor) + (c3 * sensor * sensor * sensor)));
//                                                   Tc = (T - 273.15);
//                                                    Tf = (((Tc * 9.0) / 5.0) + 32.0);
                xil_printf(",data0=%0.3d,data1=%0.3d,data3=%0.3d,SOC0=%0.3d\n\r",data[0],data[1],Vt,SOC);
//                    float2int(R2,100);
//                     xil_printf("sensor=");
//                     float2int(sensor,100);
//                     xil_printf("T=");
//                     float2int(T,100);
//                    xil_printf("Tc=");
//                     float2int(Tc,100);
//                     xil_printf("Tf=");
//                    float2int(Tf,100);
//                 xil_printf("SOC0=");
//                float2int(SOC0,100);
//                  xil_printf("data1=");
//                 float2int(data[1],1000);
                 xil_printf("p2=");
                                 float2int(p2,10000);
                                 xil_printf(",OCV0=");
                                                 float2int(OCV0,10000);
		   sleep(2);}
			}
	return 0;
}
